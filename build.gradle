buildscript {
    repositories {
        maven {
            name = ":forge"
            url = 'https://files.minecraftforge.net/maven'
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath "gradle.plugin.net.kyori:blossom:1.1.0"
    }
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: "net.kyori.blossom"

version = modVersion
group = modGroup
archivesBaseName = modBaseName

blossom {
    replaceToken '%VERSION%', modVersion
    replaceToken "%IC2_RANGE%", ic2_range
}

minecraft {
    //noinspection GroovyAssignabilityCheck
    mappings channel: "snapshot", version: mcp_version
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                supersolarpanels {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'supersolarpanels', '--all', '--output', file('src/generated/resources/')

            mods {
                supersolarpanels {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft([
            group  : "net.minecraftforge",
            name   : "forge",
            version: "${minecraft_version}-${forge_version}"
    ])

    compileOnly fileTree('deps') { include '*.jar'}
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft_version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        expand "version": project.version, "mcversion": project.minecraft_version,
                "ic2_range": project.ic2_range
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title": project.name,
                "Specification-Vendor": "ijo42",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor" :"Denfop",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
apply from: 'https://gist.github.com/ijo42/6b215e76269a72f37194b924ddda038e/raw/d782226840813ae6703044c51e98b61eb4675875/signjar.groovy'
build.dependsOn signJar

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    options.incremental = true // one flag, and things will get so MUCH faster
}
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'
jar.archiveName = "${project.archivesBaseName}-${project.minecraft_version}-${project.version}.jar"

defaultTasks 'build'
